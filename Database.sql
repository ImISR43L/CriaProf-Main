-- Tabela 1: profiles
-- Armazena dados públicos dos usuários, vinculados à tabela de autenticação.
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  full_name text NULL,
  updated_at timestamptz NULL DEFAULT now(),
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id) ON DELETE CASCADE
);
COMMENT ON TABLE public.profiles IS 'Stores public user data linked to the authentication table.';


-- Tabela 2: quizzes
-- Armazena as informações gerais de cada questionário criado.
CREATE TABLE public.quizzes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL DEFAULT auth.uid(),
  title text NOT NULL,
  grid_data jsonb NULL,
  created_at timestamptz NULL DEFAULT now(),
  CONSTRAINT quizzes_pkey PRIMARY KEY (id),
  CONSTRAINT quizzes_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE
);
COMMENT ON TABLE public.quizzes IS 'Stores general information for each created quiz.';


-- Tabela 3: questions
-- Armazena cada pergunta individual, ligada a um questionário.
CREATE TABLE public.questions (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  quiz_id uuid NOT NULL,
  color text NOT NULL,
  question_text text NOT NULL,
  answer text NOT NULL,
  CONSTRAINT questions_pkey PRIMARY KEY (id),
  CONSTRAINT questions_quiz_id_fkey FOREIGN KEY (quiz_id) REFERENCES public.quizzes(id) ON DELETE CASCADE
);
COMMENT ON TABLE public.questions IS 'Stores individual questions linked to a specific quiz.';


-- HABILITAR ROW LEVEL SECURITY (RLS) PARA TODAS AS TABELAS
-- Passo de segurança crucial para garantir que os dados sejam privados por padrão.
ALTER TABLE public.profiles ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.quizzes ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.questions ENABLE ROW LEVEL SECURITY;

-- POLÍTICAS PARA A TABELA "PROFILES"
-- -----------------------------------------

-- 1. Permitir que usuários leiam seu próprio perfil.
CREATE POLICY "Users can view their own profile."
ON public.profiles FOR SELECT
USING (auth.uid() = id);

-- 2. Permitir que usuários atualizem seu próprio perfil.
CREATE POLICY "Users can update their own profile."
ON public.profiles FOR UPDATE
USING (auth.uid() = id);


-- POLÍTICAS PARA A TABELA "QUIZZES"
-- -----------------------------------------

-- 1. Permitir que usuários leiam (SELECT) seus próprios quizzes.
CREATE POLICY "Users can view their own quizzes."
ON public.quizzes FOR SELECT
USING (auth.uid() = user_id);

-- 2. Permitir que usuários criem (INSERT) quizzes.
-- A verificação `auth.uid() = user_id` garante que eles não possam criar um quiz em nome de outra pessoa.
CREATE POLICY "Users can create quizzes."
ON public.quizzes FOR INSERT
WITH CHECK (auth.uid() = user_id);

-- 3. Permitir que usuários atualizem (UPDATE) seus próprios quizzes.
CREATE POLICY "Users can update their own quizzes."
ON public.quizzes FOR UPDATE
USING (auth.uid() = user_id);

-- 4. Permitir que usuários deletem (DELETE) seus próprios quizzes.
CREATE POLICY "Users can delete their own quizzes."
ON public.quizzes FOR DELETE
USING (auth.uid() = user_id);


-- POLÍTICAS PARA A TABELA "QUESTIONS"
-- -----------------------------------------
-- Para esta tabela, a segurança é baseada na posse do "quiz" pai.

-- 1. Permitir que usuários leiam as perguntas de seus próprios quizzes.
CREATE POLICY "Users can view questions of their own quizzes."
ON public.questions FOR SELECT
-- A sub-query verifica se o user_id do quiz correspondente é o mesmo do usuário logado.
USING ((SELECT user_id FROM public.quizzes WHERE id = questions.quiz_id) = auth.uid());

-- 2. Permitir que usuários criem perguntas em seus próprios quizzes.
CREATE POLICY "Users can create questions for their own quizzes."
ON public.questions FOR INSERT
WITH CHECK ((SELECT user_id FROM public.quizzes WHERE id = questions.quiz_id) = auth.uid());

-- 3. Permitir que usuários atualizem as perguntas de seus próprios quizzes.
CREATE POLICY "Users can update questions of their own quizzes."
ON public.questions FOR UPDATE
USING ((SELECT user_id FROM public.quizzes WHERE id = questions.quiz_id) = auth.uid());

-- 4. Permitir que usuários deletem as perguntas de seus próprios quizzes.
CREATE POLICY "Users can delete questions of their own quizzes."
ON public.questions FOR DELETE
USING ((SELECT user_id FROM public.quizzes WHERE id = questions.quiz_id) = auth.uid());